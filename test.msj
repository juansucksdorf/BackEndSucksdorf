import chai from 'chai';
const chaiHttp = require('chai-http');
const { expect } = chai;

chai.use(chaiHttp);

const serverUrl = 'http://localhost:8080'; // Ajusta el puerto si es diferente

describe('ProductManager Server Testing', () => {
  before(async () => {
    // Agrega lógica aquí para inicializar productos si es necesario
  });

  it('Debe devolver todos los productos', async () => {
    const res = await chai.request(serverUrl).get('/products');
    expect(res).to.have.status(200);
    expect(res.body).to.be.an('array').to.have.length.at.least(10);
  });

  it('Debe devolver los primeros 5 productos', async () => {
    const res = await chai.request(serverUrl).get('/products?limit=5');
    expect(res).to.have.status(200);
    expect(res.body).to.be.an('array').to.have.lengthOf(5);
  });

  it('Debe devolver un solo producto por ID', async () => {
    const res = await chai.request(serverUrl).get('/products/2');
    expect(res).to.have.status(200);
    expect(res.body).to.be.an('object');
    expect(res.body.id).to.equal(2); // Ajusta el ID según tus datos
  });

  it('Debe devolver un error al buscar un producto inexistente por ID', async () => {
    const res = await chai.request(serverUrl).get('/products/34123123');
    expect(res).to.have.status(404);
    expect(res.body).to.be.an('object');
    expect(res.body.error).to.equal('Producto inexistente con ID 34123123');
  });
});
